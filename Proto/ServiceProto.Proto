syntax = "proto3";
package Services;
option go_package = "./Services";

enum Role {
    R_NONE = 0;
    ADMIN = 1;
    WORKER = 2;
}

message BookInfo {
    // isbn号码
    string isbn = 1;
    // 作者
    string author = 2;
    // 作者国籍
    string nation = 3;
    // 书名
    string book_name = 4;
    // 书籍数量
    uint64 book_num = 5;
    // 售卖状态
    BookSaleStatus status = 6;
    // 数据类型
    string BookType = 7;
}

message AuthorInfo {
    string name = 1;
    string nation = 2;
}

// admin 接口
// 添加书籍库存
message AddBookNumRequest {
    string ISBN = 1;
    uint64 add_num = 2;
}
message AddBookNumResponse {
    int32 ret = 1;
    string error_info = 2;
}

// 添加新书
message AddNewBookRequest {
    BookInfo book_info = 1;
    uint64 num = 2;
}
message AddNewBookResponse {
    int32 ret = 1;
    string error_info = 2;
}

enum BookSaleStatus {
    CLOSE = 0;
    START = 1;
}
// 打开或者关闭书籍售卖
message BookSaleRequest {
    string isbn = 1;
    int32 set_status = 2;
}
message BookSaleResponse {
    int32 ret = 1;
    string ErrorInfo = 2;
}

// 减少书籍库存
message DecBookRequest {
    string ISBN = 1;
    uint64 dec_num = 2;
}
message DecBookResponse {
    int32 ret = 1;
    string error_info = 2;
}

// 删除书籍
message RemoveBookRequest {
    string ISBN = 1;
}
message RemoveBookResponse {
    int32 ret = 1;
    string error_info = 2;
}

service AdminService {
    // 增加书籍库存
    rpc AddBookNum (AddBookNumRequest) returns (AddBookNumResponse);
    // 减少书籍库存
    rpc DecBookNum (DecBookRequest) returns (DecBookResponse);
    // 上架新书
    rpc AddNewBook (AddNewBookRequest) returns (AddNewBookResponse);
    // 删除书籍
    rpc RemoveBook (RemoveBookRequest) returns (RemoveBookResponse);
    // 打开或者关闭书籍售卖
    rpc StartOrCloseBookSale (BookSaleRequest) returns (BookSaleResponse);
}

// worker 接口

// 查询所有书籍数量
message GetAllBookRequest {}
message GetAllBookResponse {
    int32 ret = 1;
    string error_info = 2;
    repeated BookInfo book_list = 3;
}

// 查询单个书籍信息
message GetSingleBookRequest {}
message GetSingleBookResponse {
    int32 ret = 1;
    string error_info = 2;
    repeated BookInfo book_list = 3;
}

// 查询书籍数量
message GetBookNumRequest {
    string isbn = 1;
}
message GetBookNumResponse {
    int32 ret = 1;
    uint32 num = 2;
    string error_info = 3;
}

// 购买书籍
message BuyBookRequest {
    repeated BuyBookInfo book_list = 1;
}
message BuyBookResponse {
    int32 ret = 1;
    uint32 num = 2;
    string error_info = 3;
    repeated BuyBookInfo book_list = 4;
}
message BuyBookInfo {
    string isbn = 1;
    uint32 buy_num = 2;
}

message GetBooksByAuthorRequest {
    string author_name = 1;
}
message GetBooksByAuthorResponse {
    int32 ret = 1;
    string error_info = 2;
    AuthorInfo author_info = 3;
    repeated BookInfo book_info = 4;
}

service WorkerService {
    // 查询所有书籍数量
    rpc GetAllBook(GetAllBookRequest) returns (GetAllBookResponse);
    // 查询指定书籍数量
    rpc GetBookNum(GetBookNumRequest) returns (GetBookNumResponse);
    // 购买书籍
    rpc BuyBook(BuyBookRequest) returns (BuyBookResponse);
    // 查询指定作者的所有作品
    rpc GetBooksByAuthor(GetBooksByAuthorRequest) returns (GetBooksByAuthorResponse);
}